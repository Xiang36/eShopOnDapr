kind: ConfigMap
apiVersion: v1
metadata:
  name: apigateway-cm
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
data:
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_URLS: http://0.0.0.0:80
  ENVOY_CATALOG_API_ADDRESS: catalog-api
  ENVOY_CATALOG_API_PORT: "80"
  ENVOY_ORDERING_API_ADDRESS: ordering-api
  ENVOY_ORDERING_API_PORT: "80"

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: apigateway
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      service: apigateway
  template:
    metadata:
      labels:
        app: eshop
        service: apigateway
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "apigateway"
        dapr.io/app-port: "80"
        dapr.io/config: "dapr-config"
    spec:
      containers:
      - name: apigateway
        image: "{{ .Values.global.registry }}/webshoppingapigw:{{ .Values.global.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: admin
            containerPort: 8001
            protocol: TCP
          - name: daprhttp
            containerPort: 3500
            protocol: TCP
          - name: daprgrpc
            containerPort: 50001
            protocol: TCP
        envFrom:
          - configMapRef:
              name: apigateway-cm

---

kind: Service
apiVersion: v1
metadata:
  name: apigateway
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: admin
    - port: 3500
      targetPort: 3500
      protocol: TCP
      name: daprhttp
    - port: 50001
      targetPort: 50001
      protocol: TCP
      name: daprgrpc
  selector:
    service: apigateway

---

apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: test-stripprefix
  namespace: eshopondapr
spec:
  stripPrefix:
    prefixes:
      - /gateway/

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apigateway-ingress
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/ssl-redirect: "false"
    traefik.ingress.kubernetes.io/use-regex: "true"
    traefik.ingress.kubernetes.io/rewrite-target: /$2
    traefik.frontend.rule.type: PathPrefix
    traefik.ingress.kubernetes.io/rule-type: PathPrefix
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: eshopondapr-test-stripprefix@kubernetescrd
spec:
  rules:
  - host: {{ .Values.hostName }}
    http:
      paths: 
      - path: /gateway(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: apigateway
            port: 
              number: 80
